class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
       int c = 0, m = 0, n = 0;
    ListNode* t1 = l1;
    ListNode* t2 = l2;
    ListNode* na = nullptr;

    while (t1 || t2) {
        if (t1 && t2) {
            c = c + t1->val + t2->val;
            t1->val = t2->val = c % 10;
            c /= 10;
            t1 = t1->next;
            t2 = t2->next;
        } 
        else if (t1 && !t2) {
            c = c + t1->val;
            t1->val = c % 10;
            c /= 10;
            t1 = t1->next;
            m++;
        } 
        else if (!t1 && t2) {
            c = c + t2->val;
            t2->val = c % 10;
            c /= 10;
            t2 = t2->next;
            n++;
        }
    }

    if (c > 0) {
        na = new ListNode(c);
        if (m >= n) {
            t1 = l1;
            while (t1->next) t1 = t1->next;
            t1->next = na;
        } else {
            t2 = l2;
            while (t2->next) t2 = t2->next;
            t2->next = na;
        }
    }

    return ((m >= n) ? l1 : l2);
    }
};
